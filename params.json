{
  "name": "Oraclecronschedule",
  "tagline": "Projeto PL/SQL (ORACLE) para execução de tarefas agendadas. Baseado no CRON/CRONTAB(UNIX).",
  "body": "# OracleCronSchedule\r\nProjeto PL/SQL (ORACLE) para execução de tarefas agendadas. Baseado no CRON/CRONTAB(UNIX).<br>\r\nProjeto para suprir o gerenciamento de JOBS/SCHEDULES do banco de dados ORACLE (10g).\r\n\r\n# Instalação\r\nPara instalar, basta executar o script [install.sql](https://github.com/Linepack/OracleCronSchedule/blob/master/install.sql) (localizado na raiz do projeto). Serão criadas duas tabelas <strong>(GE_AGENDAMENTO, GE_AGENDAMENTO_LOG)</strong> com suas devidas Sequences, uma Package <strong>(PKG_CRON)</strong> e uma <strong>JOB</strong> com o intervalo mínimo de um minuto ````trunc(sysdate,'mi') + 1/1440````\r\n\r\n# Uso\r\nPara agendar uma tarefa o usuário deve inserir um registro na tabela GE_AGENDAMENTO. Aqui ele preencherá o comando e a frequência com que o mesmo irá ser executado. Há também possibilidade de inativar e ativar tarefas a qualquer momento.\r\n\r\n<strong>O preenchimento de cada campo é feito da seguinte maneira:</strong>\r\n\r\n- Minutos: informe números de 0 a 59;\r\n- Horas: informe números de 0 a 23, sendo 0 meia-noite;\r\n- Dias do mês: informe números de 0 a 31;\r\n- Mês: informe números de 1 a 12, sendo 1 janeiro e 12 dezembro;\r\n- Dias da semana: informe números de 1 a 7, sendo 1 domingo e 7 sábado;\r\n- Comando: a tarefa que deve ser executada.\r\n\r\nNo lugar desses valores, você pode informar * (asterisco) para especificar uma execução constante. Por exemplo, se o campo dias do mês conter *, o comando relacionado será executado todos os dias.\r\n\r\nVocê também pode informar intervalos no preenchimento, separando os números de início e fim através de - (hífen). Por exemplo, se no campo horas for informando 2-5, o comando relacionado será executado às 2, 3, 4 e 5 horas. E se o comando tiver que ser executado às 2 horas, entre 15 e 18 horas e às 22 horas? Basta informar 2,15-18,22. Nestes casos, você separa os parâmetros por vírgula.\r\n\r\n<strong>O acompanhamento </strong> da execução de cada processo/tarefa, pode ser visto na tabela GE_AGENDAMENTO_LOG.\r\n\r\n# Exemplo\r\n\r\nAgendar um processo que parabeniza os aniversariantes do mês. Deve ser processado cada dia primeiro, as 10 horas e 30 minutos.\r\n\r\n````sql\r\ninsert into ge_agendamento\r\n\t(sq_agendamento,\r\n\t ds_agendamento,\r\n\t ds_statment,\t \t \t \r\n\t meses,\r\n   dias_do_mes,\r\n   dias_da_semana,\r\n   horas,\r\n   minutos,\r\n\t dt_usuinc,\r\n\t nm_usuinc,\r\n\t st_ativo)\r\nvalues\r\n\t(sq_ge_agendamento.nextval,\r\n   'Parabeniza Aniversariantes do mês',\r\n   'BEGIN procedimento(); END;',\r\n   '*',\r\n   '1',\r\n   '*',\r\n   '10',\r\n   '30',\r\n   sysdate,\r\n   'Usuario',\r\n   1);\r\n```\r\n\r\nAgendar um processo realiza um backup e restore. Deve ser executado no dias 1, 10, 20 e entre o 28 e 30 de cada mês, a meia-noite e ao meio dia, no primeiro minuto. A menos que seja fim de semana.\r\n\r\n````sql\r\ninsert into ge_agendamento\r\n\t(sq_agendamento,\r\n\t ds_agendamento,\r\n\t ds_statment,\t \t \t \r\n\t meses,\r\n   dias_do_mes,\r\n   dias_da_semana,\r\n   horas,\r\n   minutos,\r\n\t dt_usuinc,\r\n\t nm_usuinc,\r\n\t st_ativo)\r\nvalues\r\n\t(sq_ge_agendamento.nextval,\r\n   'Backup/Restore',\r\n   'BEGIN procedimento(); END;',\r\n   '*',\r\n   '1,10,20,28-30',\r\n   '1-5',\r\n   '0,12',\r\n   0,\r\n   sysdate,\r\n   'Usuario',\r\n   1);\r\n```\r\n\r\n\r\n# License\r\nCopyright (c) 2016 Linepack\r\n[MIT License] (https://github.com/Linepack/OracleCronSchedule/blob/master/LICENSE)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}